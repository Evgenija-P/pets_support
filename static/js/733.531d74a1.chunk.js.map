{"version":3,"file":"static/js/733.531d74a1.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { media, colors, fontWeights } from '../../styles/stylesLayout';\nimport { Form, Field } from 'formik';\n\nimport mobileBackground from '../../img/Auth/bg-auth-mobile.png';\nimport tabletBackground from '../../img/Auth/bg-auth-tablet.png';\nimport desktopBackground from '../../img/Auth/bg-auth-desctop.png';\n\nexport const Container = styled.div`\n  padding-top: 42px;\n\n  background-image: url(${mobileBackground});\n  background-position: center bottom;\n  background-size: contain;\n  background-repeat: no-repeat;\n  height: calc(100vh - 74px);\n\n  ${media.tablet} {\n    padding-top: 204px;\n\n    background-image: url(${tabletBackground});\n    height: calc(100vh - 96px);\n  }\n\n  ${media.desktop} {\n    padding-top: 80px;\n\n    background-image: url(${desktopBackground});\n    height: calc(100vh - 88px);\n  }\n`;\n\nexport const FormLogin = styled(Form)`\n  width: 280px;\n  padding-inline: 0px;\n\n  padding-bottom: 0px;\n\n  background-color: transparent;\n  margin-inline: auto;\n  box-sizing: border-box;\n\n  ${media.tablet} {\n    width: 608px;\n\n    padding: 60px 80px 40px 80px;\n\n    background-color: ${colors.white};\n    border-radius: 40px;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  }\n\n  ${media.desktop} {\n    width: 618px;\n\n    padding: 60px 80px;\n\n    background-color: ${colors.white};\n    border-radius: 40px;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 40px;\n\n  font-family: 'Manrope';\n  font-weight: ${fontWeights.bold};\n  font-size: 24px;\n  line-height: 1.4;\n  letter-spacing: 0.04em;\n\n  align-items: center;\n  text-align: center;\n\n  color: ${colors.black};\n\n  ${media.tablet} {\n    font-weight: ${fontWeights.medium};\n    font-size: 36px;\n  }\n`;\n\nexport const FieldLogin = styled.div`\n  margin-bottom: 16px;\n`;\nexport const FieldPass = styled.div`\n  margin-bottom: 40px;\n`;\n\nexport const Input = styled(Field)`\n  box-sizing: border-box;\n\n  width: 100%;\n\n  height: 40px;\n  padding-left: 14px;\n\n  font-family: 'Manrope';\n  font-weight: ${fontWeights.regular};\n  font-size: 14px;\n  line-height: 1.4;\n  align-items: center;\n  letter-spacing: 0.04em;\n\n  color: ${colors.black};\n\n  background: transparent;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n\n  border-radius: 40px;\n\n  &::placeholder {\n    font-style: normal;\n    font-weight: ${fontWeights.regular};\n    font-size: 14px;\n    line-height: 1.36;\n    letter-spacing: 0.04em;\n    color: ${colors.gray};\n  }\n\n  :hover,\n  :focus {\n    border: 2px solid ${colors.accent};\n    outline: 0;\n  }\n\n  ${media.tablet} {\n    height: 52px;\n    padding-left: 32px;\n\n    font-size: 18px;\n    line-height: 1.38;\n\n    background: ${colors.background};\n\n    &::placeholder {\n      font-style: normal;\n      font-weight: ${fontWeights.regular};\n      font-size: 18px;\n      line-height: 1.38;\n      letter-spacing: 0.04em;\n      color: ${colors.gray};\n    }\n  }\n\n  ${media.desktop} {\n    height: 52px;\n    padding-left: 32px;\n\n    font-size: 18px;\n    line-height: 1.38;\n\n    background: ${colors.background};\n\n    &::placeholder {\n      font-style: normal;\n      font-weight: ${fontWeights.regular};\n      font-size: 18px;\n      line-height: 1.38;\n      letter-spacing: 0.04em;\n      color: ${colors.gray};\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  box-sizing: border-box;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  width: 280px;\n  height: 44px;\n\n  padding: 10px 28px;\n  margin-bottom: 40px;\n\n  border: none;\n  border-radius: 40px;\n\n  color: ${colors.white};\n  background-color: ${colors.accent};\n\n  cursor: pointer;\n\n  font-family: 'Manrope';\n  font-weight: ${fontWeights.medium};\n  font-size: 20px;\n  line-height: 1.35px;\n  align-items: center;\n  text-align: center;\n  letter-spacing: 0.04em;\n\n  :hover,\n  :focus {\n    color: ${colors.black};\n    border: 2px solid ${colors.accent};\n    background-color: ${colors.white};\n  }\n\n  ${media.tablet} {\n    width: 458px;\n  }\n\n  ${media.desktop} {\n    width: 458px;\n    height: 48px;\n  }\n`;\n\nexport const Text = styled.p`\n  box-sizing: border-box;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: ${fontWeights.regular};\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n\n  color: ${colors.gray};\n`;\n\nexport const Link = styled(NavLink)`\n  display: inline-block;\n  color: ${colors.blue};\n  text-decoration: none;\n`;\n\nexport const ErrorText = styled.div`\n  display: flex;\n  align-items: center;\n\n  margin-top: 8px;\n\n  font-family: 'Manrope';\n  font-size: 12px;\n  line-height: 1.4;\n  letter-spacing: 0.03em;\n\n  color: #e53e3e;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nimport Spinner from '../Spinner';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectIsRefreshing,\n  // selectIsLoading,\n} from '../../redux/auth/selectors';\n// import { toast } from 'react-toastify';\nimport { logIn } from '../../redux/auth/operations';\n\nimport {\n  Container,\n  FormLogin,\n  FieldLogin,\n  FieldPass,\n  Title,\n  Input,\n  Button,\n  Text,\n  Link,\n  ErrorText,\n} from './LoginForm.styled';\n\nconst regexPassword = /^\\S*$/;\n\nconst loginSchema = yup.object().shape({\n  email: yup.string().email('Invalid email adress').required('Required'),\n  password: yup\n    .string()\n    .min(7, 'Password must be at least 7 characters')\n    .max(32, 'Password must be at most 32 characters')\n    .matches(regexPassword, 'Must not contain spaces')\n    .required('Required'),\n});\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nconst LoginForm = () => {\n  const isRefreshing = useSelector(selectIsRefreshing);\n  // const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = async (values, actions) => {\n    const { resetForm } = actions;\n    const form = { email: values.email, password: values.password };\n    const { error } = await dispatch(logIn(form));\n\n    if (!error) {\n      resetForm();\n    }\n\n    console.log(values);\n    //  console.log(actions)\n  };\n\n  return (\n    <>\n      {isRefreshing ? (\n        <Spinner />\n      ) : (\n        <Container>\n          <Formik\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n            validationSchema={loginSchema}\n          >\n            <FormLogin autoComplete=\"on\">\n              <Title>Login</Title>\n              <FieldLogin>\n                <label htmlFor=\"email\">\n                  <Input\n                    id=\"loginEmail\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                  />\n                  <FormError name=\"email\" />\n                </label>\n              </FieldLogin>\n\n              <FieldPass>\n                <label htmlFor=\"password\">\n                  <Input\n                    id=\"password\"\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                  />\n                  <FormError name=\"password\" />\n                </label>\n              </FieldPass>\n\n              <Button type=\"submit\">Login</Button>\n              <Text>\n                <span>\n                  Don't have an account? <Link to=\"/register\">Register</Link>\n                </span>\n              </Text>\n            </FormLogin>\n          </Formik>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default LoginForm;\n","import { Helmet } from 'react-helmet';\nimport LoginForm from '../components/LoginForm';\n\nconst Login = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </>\n  );\n};\nexport default Login;\n"],"names":["Container","styled","mobileBackground","media","tabletBackground","desktopBackground","FormLogin","Form","colors","Title","fontWeights","FieldLogin","FieldPass","Input","Field","Button","Text","Link","NavLink","ErrorText","loginSchema","yup","shape","email","required","password","min","max","matches","FormError","name","render","message","isRefreshing","useSelector","selectIsRefreshing","dispatch","useDispatch","handleSubmit","values","actions","resetForm","form","logIn","error","console","log","Spinner","initialValues","onSubmit","validationSchema","autoComplete","htmlFor","id","type","placeholder","to","Helmet"],"sourceRoot":""}