{"version":3,"file":"static/js/79.43ac59b8.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport { media, colors, fontWeights } from '../../styles/stylesLayout';\nimport { Form, Field } from 'formik';\nimport { Link } from 'react-router-dom';\nimport MaskedInput from 'react-text-mask';\nimport mobileBackground from '../../img/Homepage/hp-figure-mobile.png';\nimport tabletBackground from '../../img/Homepage/hp-figure-little-desktop.png';\nimport desktopBackground from '../../img/Homepage/hp-figure-desktop.png';\n\nexport const FormContainer = styled.div`\n  width: 100%;\n  min-height: calc(100vh - 58px);\n  background-image: url(${mobileBackground});\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: contain;\n  ${media.tabletAndDesktop} {\n    background-image: url(${tabletBackground});\n    padding-top: 184px;\n    padding-bottom: 268px;\n    min-height: calc(100vh - 64px);\n  }\n  ${media.desktop} {\n    background-image: url(${desktopBackground});\n    padding-top: 50px;\n    padding-bottom: 147px;\n  }\n`;\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: ${fontWeights.bold};\n  margin-bottom: 40px;\n  margin-top: 0;\n  ${media.tabletAndDesktop} {\n    font-size: 36px;\n    font-weight: ${fontWeights.medium};\n  }\n`;\nexport const Form1 = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 44px;\n  padding-bottom: 40px;\n  margin: 0 auto;\n  ${media.tabletAndDesktop} {\n    width: 608px;\n    margin: 0 auto;\n    padding: 60px 0 40px 0;\n    background-color: ${colors.white};\n    border-radius: 40px;\n    -webkit-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n    -moz-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n    box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n  }\n  ${media.desktop} {\n    width: 618px;\n    padding: 60px 0 60px 0;\n  }\n  > div {\n    position: relative;\n  }\n  :last-child {\n    font-size: 12px;\n  }\n`;\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\nexport const Input = styled(Field)`\n  width: 280px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: ${colors.background};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  ${media.tabletAndDesktop} {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  ${media.desktop} {\n    width: 458px;\n  }\n`;\nexport const PhoneInput = styled(MaskedInput)`\n  width: 280px;\n  padding: 11px 0 12px 14px;\n  background: ${colors.background};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  ${media.tabletAndDesktop} {\n    width: 448px;\n    padding: 14px 0 13px 32px;\n    font-size: 18px;\n  }\n  ${media.desktop} {\n    width: 458px;\n  }\n`;\nexport const Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: ${colors.white};\n  background: ${colors.accent};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin: 24px 0 40px 0;\n  transform: scale(1);\n  transition: transform 0.5s;\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(255, 255, 255, 0.6),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  :disabled:before {\n    transform: none;\n    transition: none;\n  }\n  ${media.tabletAndDesktop} {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\nexport const BackButton = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #000;\n  background: ${colors.white};\n  border: 1px solid ${colors.accent};\n  border-radius: 40px;\n  margin: -26px 0 40px 0;\n  cursor: pointer;\n  transform: scale(1);\n  transition: transform 0.5s;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(245, 146, 86, 0.9),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  ${media.tabletAndDesktop} {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\nexport const ErrBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0px;\n  left: 15px;\n  color: red;\n  font-size: 14px;\n  font-style: italic;\n  ${media.tabletAndDesktop} {\n    left: 33px;\n  }\n`;\nexport const StyledLink = styled(Link)`\n  color: ${colors.blue};\n  transition: color ${colors.background};\n  :hover,\n  :focus {\n    color: ${colors.accent};\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik, Formik } from 'formik';\nimport { object, string, ref } from 'yup';\nimport Spinner from '../Spinner';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\n\nimport { selectIsLoading } from '../../redux/auth/selectors';\nimport { register } from '../../redux/auth/operations';\n\nimport {\n  Form1,\n  FormContainer,\n  Input,\n  Button,\n  Title,\n  ErrBox,\n  BackButton,\n  PhoneInput,\n  ShowPassword,\n  StyledLink,\n} from './RegisterForm.styled';\n\nconst phoneNumberMask = [\n  '+',\n  /\\d/,\n  /\\d/,\n  '(',\n  /[0-9]/,\n  /\\d/,\n  /\\d/,\n  ')',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '-',\n  /\\d/,\n  /\\d/,\n  '-',\n  /\\d/,\n  /\\d/,\n];\n\nconst registerSchema = object().shape({\n  password: string()\n    .min(7, 'Too Short!')\n    .max(32, 'Too Long!')\n    .required('Password is required'),\n  confirmPassword: string()\n    .required('Please confirm your password')\n    .oneOf([ref('password')], 'Passwords does not match'),\n  email: string()\n    .matches(\n      /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n      'Invalid email'\n    )\n    .email('Invalid email')\n    .required('Email is required'),\n  name: string()\n    .min(2, 'min 2 symbols')\n    .matches(/^[a-zA-Zа-яА-Я-`'іІїЇ]*$/, 'Only letters')\n    .required('Name is required'),\n  phone: string()\n    .min(13, 'Too Short!')\n    .matches(\n      /^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){12}(\\s*)?$/,\n      'bad phone number'\n    )\n    .required('Phone is required'),\n  city: string()\n    .matches(\n      /^(([a-zA-Zа-яА-Я]([-]?)){1,})([^-,?,\\s,.,0-9,!])+(,)+((\\s?[a-zA-Zа-яА-Я](([-]?){0,1})){1,})([^-,?,.,\\s,0-9,!])$/,\n      'Error. Example: Brovary, Kyiv'\n    )\n    .required('City is required'),\n});\n\nconst RegisterForm = () => {\n  const [isShown, setIsShown] = useState(true);\n  const [showPass, setShowPass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const loading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const showForm = () => {\n    setIsShown(false);\n  };\n  const hideForm = () => {\n    setIsShown(true);\n  };\n\n  const onSubmit = values => {\n    const { name, email, password, phone, city } = values;\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n        phone,\n        city,\n      }),\n      hideForm()\n    );\n    //console.log(values);\n  };\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      phone: '',\n      city: '',\n    },\n    validationSchema: registerSchema,\n    onSubmit,\n  });\n\n  const isValid =\n    (formik.errors.email && formik.touched.email) ||\n    (formik.errors.password && formik.touched.password) ||\n    (formik.errors.confirmPassword && formik.touched.confirmPassword) ||\n    formik.values.email === '' ||\n    formik.values.confirmPassword === ''\n      ? true\n      : false;\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n  const showConfirmPassword = () => {\n    setShowConfirmPass(!showConfirmPass);\n  };\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <FormContainer>\n          <Formik validationSchema={registerSchema}>\n            <Form1 onSubmit={formik.handleSubmit}>\n              <Title>Register</Title>\n              {isShown && (\n                <>\n                  <div>\n                    <Input\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      onChange={formik.handleChange}\n                      value={formik.values.email}\n                      onBlur={formik.handleBlur}\n                    />\n\n                    {formik.errors.email || formik.touched.email ? (\n                      <ErrBox>{formik.errors.email}</ErrBox>\n                    ) : null}\n                  </div>\n                </>\n              )}\n\n              {isShown && (\n                <>\n                  <div>\n                    <Input\n                      name=\"password\"\n                      type={showPass ? 'text' : 'password'}\n                      placeholder=\"Password\"\n                      onChange={formik.handleChange}\n                      value={formik.values.password}\n                      onBlur={formik.handleBlur}\n                    />\n\n                    <ShowPassword onClick={showPassword}>\n                      {!showPass ? <ImEyeBlocked /> : <ImEye />}\n                    </ShowPassword>\n                    {formik.errors.password && formik.touched.password ? (\n                      <ErrBox>{formik.errors.password}</ErrBox>\n                    ) : null}\n                  </div>\n                </>\n              )}\n              {isShown && (\n                <>\n                  <div>\n                    <Input\n                      name=\"confirmPassword\"\n                      type={showConfirmPass ? 'text' : 'password'}\n                      placeholder=\"Confirm Password\"\n                      onChange={formik.handleChange}\n                      value={formik.values.confirmPassword}\n                      onBlur={formik.handleBlur}\n                    />\n                    <ShowPassword onClick={showConfirmPassword}>\n                      {!showConfirmPass ? <ImEyeBlocked /> : <ImEye />}\n                    </ShowPassword>\n                    {formik.errors.confirmPassword &&\n                    formik.touched.confirmPassword ? (\n                      <ErrBox>{formik.errors.confirmPassword}</ErrBox>\n                    ) : null}\n                  </div>\n                </>\n              )}\n              {isShown && (\n                <Button type=\"button\" onClick={showForm} disabled={isValid}>\n                  Next\n                </Button>\n              )}\n              {!isShown && (\n                <>\n                  <div>\n                    <Input\n                      name=\"name\"\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      onChange={formik.handleChange}\n                      value={formik.values.name}\n                      onBlur={formik.handleBlur}\n                    />\n\n                    {formik.errors.name && formik.touched.name ? (\n                      <ErrBox>{formik.errors.name}</ErrBox>\n                    ) : null}\n                  </div>\n                </>\n              )}\n              {!isShown && (\n                <>\n                  <div>\n                    <Input\n                      name=\"city\"\n                      type=\"text\"\n                      placeholder=\"City, region\"\n                      onChange={formik.handleChange}\n                      value={formik.values.city}\n                      onBlur={formik.handleBlur}\n                    />\n\n                    {formik.errors.city && formik.touched.city ? (\n                      <ErrBox>{formik.errors.city}</ErrBox>\n                    ) : null}\n                  </div>\n                </>\n              )}\n              {!isShown && (\n                <>\n                  <div>\n                    <PhoneInput\n                      mask={phoneNumberMask}\n                      id=\"phone\"\n                      type=\"phone\"\n                      placeholder=\"Mobile phone\"\n                      onChange={formik.handleChange}\n                      value={formik.values.phone}\n                      onBlur={formik.handleBlur}\n                      name=\"phone\"\n                    />\n\n                    {formik.errors.phone && formik.touched.phone ? (\n                      <ErrBox>{formik.errors.phone}</ErrBox>\n                    ) : null}\n                  </div>\n                </>\n              )}\n              {!isShown && <Button type=\"submit\">Register</Button>}\n              {!isShown && (\n                <BackButton type=\"button\" onClick={hideForm}>\n                  Back\n                </BackButton>\n              )}\n              <div>\n                <span>Already have an account?</span>{' '}\n                <StyledLink to=\"/login\">Login</StyledLink>\n              </div>\n            </Form1>\n          </Formik>\n        </FormContainer>\n      )}\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from '../components/RegisterForm';\n\nexport default function Register() {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["FormContainer","styled","mobileBackground","media","tabletBackground","desktopBackground","Title","fontWeights","Form1","Form","colors","ShowPassword","Input","Field","PhoneInput","MaskedInput","Button","BackButton","ErrBox","StyledLink","Link","phoneNumberMask","registerSchema","object","shape","password","string","min","max","required","confirmPassword","oneOf","ref","email","matches","name","phone","city","useState","isShown","setIsShown","showPass","setShowPass","showConfirmPass","setShowConfirmPass","loading","useSelector","selectIsLoading","dispatch","useDispatch","hideForm","formik","useFormik","initialValues","validationSchema","onSubmit","values","register","isValid","errors","touched","Spinner","handleSubmit","type","placeholder","onChange","handleChange","value","onBlur","handleBlur","onClick","disabled","mask","id","to","Register"],"sourceRoot":""}