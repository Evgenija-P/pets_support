{"version":3,"file":"static/js/390.dcb422c3.chunk.js","mappings":"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","sources":["servises/fetchNotices/fetchNoticesByCategory.js","components/NoticesElements/NoticesCategoriesList/NoticesCategoriesList.styled.js","components/NoticesElements/NoticesCategoriesList/NoticesCategoriesList.jsx","components/NoticesElements/NoticesCategoriesNav/NoticesCategoriesNav.styled.js","components/NoticesElements/NoticesAuthNav/NoticesAuthNav.jsx","components/NoticesElements/NoticesUserNav/NoticesUserNav.jsx","components/NoticesElements/NoticesCategoriesNav/NoticesCategoriesNav.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'http://localhost:3001/api';\n\naxios.defaults.baseURL = BASE_URL;\n\nasync function getNoticesByCategory(category) {\n  const response = await axios.get(category);\n\n  console.log(response.data.message);\n  return response.data;\n}\n\nexport default getNoticesByCategory;\n","import styled from '@emotion/styled';\nimport { media, colors, fontWeights } from '../../../styles/stylesLayout';\n\nexport const NoticesList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(1, minmax(50px, 1fr));\n  gap: 32px;\n\n  margin: 30px 0px;\n\n  ${media.tablet} {\n    grid-template-columns: repeat(2, minmax(50px, 1fr));\n  }\n\n  ${media.tabletAndDesktop} {\n    margin: 60px 0px;\n  }\n\n  ${media.desktop} {\n    grid-template-columns: repeat(4, minmax(50px, 1fr));\n  }\n`;\n\nexport const NoticesItem = styled.div`\n  border-radius: 0px 0px 20px 20px;\n  box-shadow: 7px 4px 15px 0px ${colors.shadow};\n\n  overflow: hidden;\n`;\n\nexport const NoticesTop = styled.div`\n  position: relative;\n\n  width: 100%;\n`;\n\nexport const NoticesImage = styled.img`\n  display: block;\n\n  width: 100%;\n  height: 288px;\n\n  object-fit: cover;\n`;\n\nexport const NoticesBadge = styled.span`\n  position: absolute;\n  top: 20px;\n\n  display: flex;\n  align-items: center;\n\n  width: 158px;\n  height: 28px;\n  padding: 8px 20px;\n\n  border-radius: 0px 20px 20px 0px;\n  background-color: ${colors.white};\n\n  font-weight: ${fontWeights.bold};\n  font-size: 12px;\n  letter-spacing: 0.04em;\n`;\n\nexport const NoticesDescription = styled.div`\n  padding: 20px 16px 32px 16px;\n  background-color: ${colors.white};\n`;\n\nexport const NoticesTitle = styled.h2`\n  font-weight: ${fontWeights.bold};\n  font-size: 28px;\n  line-height: 1.35;\n  letter-spacing: -0.01em;\n\n  margin-bottom: 20px;\n`;\n\nexport const NoticesTags = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  margin-bottom: 50px;\n`;\n\nexport const NoticesTag = styled.span`\n  display: block;\n\n  font-weight: ${fontWeights.medium};\n  font-size: 16px;\n  line-height: 22px;\n`;\n\nexport const NoticesButton = styled.button`\n  width: 248px;\n  height: 38px;\n\n  border-radius: 40px;\n  border: 2px solid ${colors.accent};\n  background-color: ${colors.white};\n\n  font-weight: ${fontWeights.medium};\n  font-size: 16px;\n  line-height: 22px;\n  letter-spacing: 0.04em;\n\n  text-align: center;\n\n  color: ${colors.accent};\n\n  &:hover,\n  &:focus {\n    border-color: ${colors.accentButton};\n    outline-color: ${colors.accentButton};\n    color: ${colors.accentButton};\n  }\n\n  cursor: pointer;\n`;\n","import {\n  NoticesList,\n  NoticesItem,\n  NoticesTop,\n  NoticesImage,\n  NoticesBadge,\n  NoticesDescription,\n  NoticesTitle,\n  NoticesTags,\n  NoticesTag,\n  NoticesButton,\n} from './NoticesCategoriesList.styled';\n\nimport notFoundNoticesImage from '../../../img/notFoundNoticesImage.jpg';\n\nconst NoticesCategoriesList = ({ notices }) => {\n  return (\n    <NoticesList>\n      {notices.map(\n        ({\n          _id,\n          categoryName,\n          petImageURL,\n          title,\n          breed,\n          location,\n          age,\n          price,\n        }) => (\n          <NoticesItem key={_id}>\n            <NoticesTop>\n              <NoticesBadge>{categoryName}</NoticesBadge>\n              <NoticesImage\n                src={petImageURL ? petImageURL : notFoundNoticesImage}\n                alt={title}\n              />\n            </NoticesTop>\n\n            <NoticesDescription>\n              <NoticesTitle>{title}</NoticesTitle>\n\n              <NoticesTags>\n                <NoticesTag>Breed: {breed}</NoticesTag>\n                <NoticesTag>Place: {location}</NoticesTag>\n                <NoticesTag>Age: {age}</NoticesTag>\n                <NoticesTag>Price: {price}$</NoticesTag>\n              </NoticesTags>\n\n              <NoticesButton>Learn More</NoticesButton>\n            </NoticesDescription>\n          </NoticesItem>\n        )\n      )}\n    </NoticesList>\n  );\n};\n\nexport default NoticesCategoriesList;\n","import { NavLink } from 'react-router-dom';\n\nimport styled from '@emotion/styled';\nimport { media, colors, fontWeights } from '../../../styles/stylesLayout';\n\nexport const NoticesCategoriesListLink = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n`;\n\nexport const NoticesCategoriesLink = styled(NavLink)`\n  display: block;\n\n  padding: 8px 28px;\n  border-radius: 40px;\n  border: 2px solid ${colors.accent};\n  outline-color: ${colors.accent};\n\n  background-color: ${colors.white};\n\n  font-size: 14px;\n  font-weight: ${fontWeights.medium};\n  line-height: 0.75;\n  color: ${colors.black};\n\n  text-decoration: none;\n\n  ${media.tabletAndDesktop} {\n    padding: 10px 28px;\n    font-size: 20px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: ${colors.accent};\n    color: ${colors.white};\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport getNoticesByCategory from '../../../servises/fetchNotices/fetchNoticesByCategory';\n\nimport NoticesCategoriesList from '../NoticesCategoriesList/NoticesCategoriesList';\n\nimport {\n  NoticesCategoriesListLink,\n  NoticesCategoriesLink,\n} from '../NoticesCategoriesNav/NoticesCategoriesNav.styled';\n\nconst NoticesAuthNav = () => {\n  const [notices, setNotices] = useState([]);\n  const { pathname: category } = useLocation();\n\n  useEffect(() => {\n    const fetchNotices = async () => {\n      const { message: result } = await getNoticesByCategory(category);\n      setNotices(result);\n      try {\n      } catch (error) {}\n    };\n\n    fetchNotices();\n  }, [category]);\n\n  return (\n    <>\n      <NoticesCategoriesListLink>\n        <li>\n          <NoticesCategoriesLink to=\"/notices/sell\">Sell</NoticesCategoriesLink>\n        </li>\n        <li>\n          <NoticesCategoriesLink to=\"/notices/lost-found\">\n            Lost / Found\n          </NoticesCategoriesLink>\n        </li>\n        <li>\n          <NoticesCategoriesLink to=\"/notices/for-free\">\n            In good hands\n          </NoticesCategoriesLink>\n        </li>\n        <li>\n          <NoticesCategoriesLink to=\"/notices/favorite\">\n            Favorite ads\n          </NoticesCategoriesLink>\n        </li>\n        <li>\n          <NoticesCategoriesLink to=\"/notices/own\">\n            My ads\n          </NoticesCategoriesLink>\n        </li>\n      </NoticesCategoriesListLink>\n\n      <NoticesCategoriesList notices={notices} />\n    </>\n  );\n};\n\nexport default NoticesAuthNav;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport getNoticesByCategory from '../../../servises/fetchNotices/fetchNoticesByCategory';\n\nimport NoticesCategoriesList from '../NoticesCategoriesList/NoticesCategoriesList';\n\nimport {\n  NoticesCategoriesListLink,\n  NoticesCategoriesLink,\n} from '../NoticesCategoriesNav/NoticesCategoriesNav.styled';\n\nconst NoticesAuthNav = () => {\n  const [notices, setNotices] = useState([]);\n  const { pathname: category } = useLocation();\n\n  useEffect(() => {\n    const fetchNotices = async () => {\n      const { message: result } = await getNoticesByCategory(category);\n      setNotices(result);\n      try {\n      } catch (error) {}\n    };\n\n    fetchNotices();\n  }, [category]);\n\n  return (\n    <>\n      <NoticesCategoriesListLink>\n        <li>\n          <NoticesCategoriesLink to=\"/notices/sell\">Sell</NoticesCategoriesLink>\n        </li>\n        <li>\n          <NoticesCategoriesLink to=\"/notices/lost-found\">\n            Lost / Found\n          </NoticesCategoriesLink>\n        </li>\n        <li>\n          <NoticesCategoriesLink to=\"/notices/for-free\">\n            In good hands\n          </NoticesCategoriesLink>\n        </li>\n      </NoticesCategoriesListLink>\n\n      <NoticesCategoriesList notices={notices} />\n    </>\n  );\n};\n\nexport default NoticesAuthNav;\n","import NoticesAuthNav from '../NoticesAuthNav';\nimport NoticesUserNav from '../NoticesUserNav';\nimport useAuth from '../../../hooks/useAuth';\n\nconst NoticesCategoriesNav = () => {\n  const { isLoggedIn } = useAuth();\n\n  return <div>{isLoggedIn ? <NoticesAuthNav /> : <NoticesUserNav />}</div>;\n};\n\nexport default NoticesCategoriesNav;\n"],"names":["getNoticesByCategory","category","axios","response","console","log","data","message","NoticesList","styled","media","NoticesItem","colors","NoticesTop","NoticesImage","NoticesBadge","fontWeights","NoticesDescription","NoticesTitle","NoticesTags","NoticesTag","NoticesButton","notices","map","_id","categoryName","petImageURL","title","breed","location","age","price","src","notFoundNoticesImage","alt","NoticesCategoriesListLink","NoticesCategoriesLink","NavLink","useState","setNotices","useLocation","pathname","useEffect","fetchNotices","result","to","isLoggedIn","useAuth","NoticesUserNav"],"sourceRoot":""}