{"version":3,"file":"static/js/696.f3f11967.chunk.js","mappings":"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","sources":["components/UserInformation/UserInformation.styled.js","components/UserInformation/UserInformatiom.jsx","pages/UserPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\nimport { HiOutlineLogout } from \"react-icons/hi\";\nimport { MdModeEdit } from \"react-icons/md\";\nimport { BsCheckLg, BsCameraFill } from \"react-icons/bs\";\nimport { media, colors, fontWeights } from '../../styles/stylesLayout';\n\n\n\n\nexport const Title = styled.h1`\n    font-weight: ${fontWeights.medium};\n    font-size: 20px;\n    line-height: 27px;\n    color: #000000;\n    margin-top: 55px;\n    ${media.mobile}{\n        letter-spacing: 0.04em;\n    }\n    ${media.tabletAndDesktop}{\n        font-size: 28px;\n        line-height: 38px;\n        color: ${colors.black};\n        margin-top: 90px;\n    }\n    ${media.desktop}{\n        margin-top: 55px;\n    }\n`;\n\nexport const UserContainer = styled.div`\n    margin-top: 18px;\n    background-color: ${colors.white};\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 20px;\n    padding-left: 16px;\n    padding-right: 12px;\n    padding-bottom: 20px;\n    ${media.mobile}{\n        padding-top: 20px;\n    }\n    ${media.tablet}{\n        position: relative;\n        margin-top: 40px;\n        border-radius: 0px 40px 40px 0px;\n        padding-left: 32px;\n        padding-right: 40px;\n        padding-bottom: 24px;\n    }\n    ${media.desktop}{\n        width: 411px;\n        margin-top: 24px;\n        padding-top: 20px;\n        padding-left: 16px;\n        padding-right: 16px;\n        padding-bottom: 40px;\n        box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n        border-radius: 0px 40px 40px 0px;\n    }\n\n`\n\nexport const UserImg = styled.img`\n    display: block;\n    margin: 0 auto;\n    margin-top: 24px;\n    width: 233px;\n    height: 233px;\n    filter: drop-shadow(0px 4px 14px rgba(0, 0, 0, 0.11));\n    border-radius: 50%;\n    object-fit: cover;\n\n    ${media.desktop}{\n        margin-top: 0;\n    }\n\n`\n\nexport const UserForm = styled(Form)`\n    margin-top: 36px;\n    ${media.tablet}{\n        margin-top: 40px;\n        width: 379px;\n    }\n`\n\nexport const UserInformationContainer = styled.div`\n  display: grid;\n  grid-template-columns:  repeat(3, 1fr);\n   margin-bottom: 12px;\n    &:last-child{\n        margin-bottom: 0px;\n    }\n`\nexport const UserKeyLabel = styled.label`\n    display:flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: ${fontWeights.medium};\n    font-size: 12px;\n    line-height: 16px;\n    letter-spacing: 0.04em;\n    color: ${colors.black};\n    margin-bottom: 8px;\n    &:last-child{\n        margin-bottom: 0px;\n    }\n    ${media.tabletAndDesktop}{\n        font-size: 18px;\n        line-height: 25px;\n    }\n   \n\n `\n\nexport const UserValueInput = styled(Field)`\n\n    background: ${colors.background};\n    border: 1px solid rgba(245, 146, 86, 0.5);\n    border-radius: 40px;\n    font-weight: ${fontWeights.regular};\n    font-size: 12px;\n    line-height: 16px;\n    letter-spacing: 0.04em;\n    color: ${colors.black};\n    margin-left: 25px;\n    padding: 4px 0 4px 18px;\n    width: 150px;\n     ${media.tabletAndDesktop}{\n        font-size: 18px;\n        line-height: 25px;\n        width: 200px;\n    }\n `\nexport const UserInformationEdited = styled(BsCheckLg)`\n    width: 12,5px;\n    height: 12,5px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    ${media.tabletAndDesktop}{\n        width: 20px;\n        height: 20px;\n    }\n`\n\nexport const UserKey = styled.p`\n    font-weight: ${fontWeights.medium};\n    font-size: 12px;\n    line-height: 16px;\n    letter-spacing: 0.04em;\n    color: ${colors.black};\n    ${media.tabletAndDesktop}{\n        font-size: 18px;\n        line-height: 25px;\n    }\n `\n\nexport const UserValue = styled.p`\n    font-weight: ${fontWeights.regular};\n    font-size: 12px;\n    line-height: 16px;\n    letter-spacing: 0.04em;\n    color: ${colors.black};\n    ${media.tabletAndDesktop}{\n        font-size: 18px;\n        line-height: 25px;\n    }\n\n `\nexport const UserInformationEditWrapper = styled.button`\n    position:relative;\n    width: 20px;\n    height: 20px;\n    background-color: ${colors.background};\n    border:0;\n    border-radius: 50%;\n    color: ${(prop) => (prop.click === 'name' ? 'rgba(17, 17, 17, 0.6);' :\n        prop.click === 'city' ? 'rgba(17, 17, 17, 0.6);' :\n        prop.click === 'email' ? 'rgba(17, 17, 17, 0.6);' :\n        prop.click === 'phone' ? 'rgba(17, 17, 17, 0.6);' :\n        prop.click === 'birthday' ? 'rgba(17, 17, 17, 0.6);' : '#F59256')\n    \n    };\n    margin-left: auto;\n    ${media.tabletAndDesktop}{\n        width: 32px;\n        height: 32px;\n    }\n `\n\nexport const UserInformationEdit = styled(MdModeEdit)`\n    width: 12,5px;\n    height: 12,5px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    ${media.tabletAndDesktop}{\n        width: 20px;\n        height: 20px;\n    }\n    \n `\n\n\nexport const LogOutWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    & :hover, :focus {\n        color: black;\n        stroke: black;\n    }\n    ${media.mobile}{\n        margin-top: 42px;\n        justify-content: flex-end;\n    }\n    ${media.tablet}{\n        position: absolute;\n        bottom: 24px;\n        left: 32px;\n    }\n    ${media.desktop}{\n        margin-top: 44px;\n    }\n`\nexport const LogOutIcon = styled(HiOutlineLogout)`\n    width: 18px;\n    height: 18px;\n    stroke: ${colors.accent};\n    cursor: pointer;\n`\n\nexport const LogOutButton = styled.button`\n    border: 0;\n    background-color: ${colors.white};\n    padding: 0;\n    padding-left: 8px;\n    font-weight: ${fontWeights.medium};\n    font-size: 16px;\n    line-height: 22px;\n    letter-spacing: 0.04em;\n    color: rgba(17, 17, 17, 0.6);\n`\n\nexport const LabelEditPhoto = styled.label`\n    display: flex;\n    color: ${colors.accent};\n    justify-content: flex-end;\n    align-items: center;\n    margin-top: 12px;\n    margin-right: 12px;\n    cursor: pointer;\n     & :hover, :focus{\n        color: ${colors.black};\n    }\n\n    ${media.tablet}{\n       margin-top: 8px; \n    }\n    ${media.desktop}{\n        position:absolute;\n        right: 0;\n        bottom: 3px;\n        margin-top: 0;\n        margin-right: 0;\n\n    }\n`\n\nexport const InputEditPhoto = styled.input`\n    display: none;\n`\n\nexport const CameraSVG = styled(BsCameraFill)`\n    stroke: ${colors.accent};\n    width: 20px;\n    height: 20px;\n   \n`\n\nexport const TextEditPhoto = styled.p`\n    font-weight: ${fontWeights.regular};\n    font-size: 12px;\n    line-height: 22px;\n    letter-spacing: 0.04em;\n    color: ${colors.black};\n    margin-left: 4px;\n    & :hover, :focus{\n        color: ${colors.accent};\n    }\n    ${media.desktop}{\n        margin-left: 5px;\n    }\n`\n\nexport const UserWrapper = styled.div`\n    ${media.tablet}{\n        position: relative;\n        display: flex;\n        flex-direction: row-reverse;\n        justify-content: space-between;\n    }\n`\n\nexport const AvatarWrapper = styled.div`\n    ${media.desktop}{\n        position: relative;\n    }\n`\n","import { Formik} from 'formik';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUser } from '../../redux/auth/selectors'\nimport { logOut, addAvatar, updateUserInformation } from '../../redux/auth/operations'\nimport imgPlug from '../../img/no-foto.png'\n\nimport {\n    Title,\n    UserContainer,\n    UserImg,\n    UserInformationContainer,\n    UserForm,\n    UserKey,\n    UserValue,\n    LogOutWrapper,\n    LogOutButton,\n    LogOutIcon,\n    UserInformationEdit,\n    UserInformationEditWrapper,\n    UserKeyLabel,\n    UserValueInput,\n    UserInformationEdited,\n    InputEditPhoto,\n    CameraSVG,\n    LabelEditPhoto,\n    TextEditPhoto,\n    UserWrapper,\n    AvatarWrapper\n} from './UserInformation.styled'\n \n\n\n\n\nconst UserInformation = () => {\n    const [change, setChange] = useState(false);\n    const user = useSelector(selectUser);\n    const dispatch = useDispatch();\n\n\n\n\n    const initialValues = {\n        name: user.name,\n        email: user.email,\n        birthday: user.birthday,\n        phone: user.phone,\n        city: user.city\n    }\n    const handleSubmit = ({name, email, birthday, phone, city}) => {\n        const data = {\n            name,\n            email,\n            birthday,\n            phone,\n            city,\n        }\n        dispatch(updateUserInformation(data))\n        setChange(false);\n    }\n    \n    const handleChange = (e) => {\n        const avatar = e.target.files[0];\n        const formData = new FormData();\n        formData.append('avatar', avatar);\n        dispatch(addAvatar(formData));\n    }\n    \n\n    return (\n        <div>\n            <Title>My information: </Title>\n            <UserContainer>\n                <UserWrapper>\n                    <AvatarWrapper>\n                        <UserImg\n                            src={!user.avatarURL ? imgPlug : user.avatarURL}\n                            alt=\"Avatar\"\n                        />\n                        <LabelEditPhoto onChange={handleChange}>\n                            <InputEditPhoto type=\"file\" />\n                            <CameraSVG />\n                            <TextEditPhoto>Edit Photo</TextEditPhoto>\n                        </LabelEditPhoto>\n                    </AvatarWrapper>\n                    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n                        <UserForm autoComplete='off'>\n\n                            {change === 'name' ?\n                                <UserKeyLabel>\n                                    Name:\n                                    <UserValueInput type='text' name='name' />\n                                    <UserInformationEditWrapper type='submit' >\n                                        <UserInformationEdited />\n                                    </UserInformationEditWrapper>\n                                </UserKeyLabel> :\n                                <UserInformationContainer>\n                                    <UserKey>Name:</UserKey>\n                                    <UserValue>{`${initialValues.name}`}</UserValue>\n                                    <UserInformationEditWrapper click={change}>\n                                        <UserInformationEdit onClick={() => setChange('name')} />\n                                    </UserInformationEditWrapper>\n                                </UserInformationContainer>}\n                        \n                            {change === 'email' ?\n                                <UserKeyLabel>\n                                    Email:\n                                    <UserValueInput type='email' name='email' />\n                                    <UserInformationEditWrapper type='submit' >\n                                        <UserInformationEdited />\n                                    </UserInformationEditWrapper>\n                                </UserKeyLabel> :\n                                <UserInformationContainer>\n                                    <UserKey>Email:</UserKey>\n                                    <UserValue>{`${initialValues.email}`}</UserValue>\n                                    <UserInformationEditWrapper click={change}>\n                                        <UserInformationEdit onClick={() => setChange('email')} />\n                                    </UserInformationEditWrapper>\n                                </UserInformationContainer>}\n                        \n                            {change === 'birthday' ?\n                                <UserKeyLabel>\n                                    Birthday:\n                                    <UserValueInput type='text' name='birthday' />\n                                    <UserInformationEditWrapper type='submit' >\n                                        <UserInformationEdited />\n                                    </UserInformationEditWrapper>\n                                </UserKeyLabel> :\n                                <UserInformationContainer>\n                                    <UserKey>Birthday:</UserKey>\n                                    <UserValue>{`${initialValues.birthday}`}</UserValue>\n                                    <UserInformationEditWrapper click={change}>\n                                        <UserInformationEdit onClick={() => setChange('birthday')} />\n                                    </UserInformationEditWrapper>\n                                </UserInformationContainer>}\n                        \n                            {change === 'phone' ?\n                                <UserKeyLabel>\n                                    Phone:\n                                    <UserValueInput type='text' name='phone' />\n                                    <UserInformationEditWrapper type='submit' >\n                                        <UserInformationEdited />\n                                    </UserInformationEditWrapper>\n                                </UserKeyLabel> :\n                                <UserInformationContainer>\n                                    <UserKey>Phone:</UserKey>\n                                    <UserValue>{`${initialValues.phone}`}</UserValue>\n                                    <UserInformationEditWrapper click={change}>\n                                        <UserInformationEdit onClick={() => setChange('phone')} />\n                                    </UserInformationEditWrapper>\n                                </UserInformationContainer>}\n                        \n                            {change === 'city' ?\n                                <UserKeyLabel>\n                                    City:\n                                    <UserValueInput type='text' name='city' />\n                                    <UserInformationEditWrapper type='submit' >\n                                        <UserInformationEdited />\n                                    </UserInformationEditWrapper>\n                                </UserKeyLabel> :\n                                <UserInformationContainer>\n                                    <UserKey>City:</UserKey>\n                                    <UserValue>{`${initialValues.city}`}</UserValue>\n                                    <UserInformationEditWrapper click={change}>\n                                        <UserInformationEdit onClick={() => setChange('city')} />\n                                    </UserInformationEditWrapper>\n                                </UserInformationContainer>}\n                        </UserForm>\n                    </Formik>\n                </UserWrapper>\n                <LogOutWrapper>\n                    <LogOutIcon onClick={() => dispatch(logOut())} />\n                    <LogOutButton type='button' onClick={() => dispatch(logOut())}>\n                        Log out\n                    </LogOutButton>\n                </LogOutWrapper>\n            </UserContainer>\n        </div>\n    );\n};\n\nexport default UserInformation;","import { Helmet } from \"react-helmet\";\nimport UserInformation from \"../components/UserInformation/UserInformatiom\";\n\nconst UserPage = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Helmet>\n\t\t\t\t<title>UserPage</title>\n\t\t\t</Helmet>\n\t\t\t<UserInformation/>\n      {/* <UserPets /> */}\n\t\t</div>\n\t);\n};\n\nexport default UserPage;\n"],"names":["Title","styled","fontWeights","media","colors","UserContainer","UserImg","UserForm","Form","UserInformationContainer","UserKeyLabel","UserValueInput","Field","UserInformationEdited","BsCheckLg","UserKey","UserValue","UserInformationEditWrapper","prop","click","UserInformationEdit","MdModeEdit","LogOutWrapper","LogOutIcon","HiOutlineLogout","LogOutButton","LabelEditPhoto","InputEditPhoto","CameraSVG","BsCameraFill","TextEditPhoto","UserWrapper","AvatarWrapper","useState","change","setChange","user","useSelector","selectUser","dispatch","useDispatch","initialValues","name","email","birthday","phone","city","src","avatarURL","imgPlug","alt","onChange","e","avatar","target","files","formData","FormData","append","addAvatar","type","onSubmit","data","updateUserInformation","autoComplete","onClick","logOut","Helmet"],"sourceRoot":""}