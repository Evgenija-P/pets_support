{"version":3,"file":"static/js/301.7de6cacd.chunk.js","mappings":"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","sources":["../node_modules/react-spinners/ClockLoader.js","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar unitConverter_1 = require(\"./helpers/unitConverter\");\nvar animation_1 = require(\"./helpers/animation\");\nvar rotate = (0, animation_1.createAnimation)(\"ClockLoader\", \"100% { transform: rotate(360deg) }\", \"rotate\");\nfunction ClockLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 50 : _f, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\"]);\n    var _g = (0, unitConverter_1.parseLengthAndUnit)(size), value = _g.value, unit = _g.unit;\n    var wrapper = __assign({ display: \"inherit\", position: \"relative\", width: \"\".concat(value).concat(unit), height: \"\".concat(value).concat(unit), backgroundColor: \"transparent\", boxShadow: \"inset 0px 0px 0px 2px \".concat(color), borderRadius: \"50%\" }, cssOverride);\n    var minute = {\n        position: \"absolute\",\n        backgroundColor: color,\n        width: \"\".concat(value / 3, \"px\"),\n        height: \"2px\",\n        top: \"\".concat(value / 2 - 1, \"px\"),\n        left: \"\".concat(value / 2 - 1, \"px\"),\n        transformOrigin: \"1px 1px\",\n        animation: \"\".concat(rotate, \" \").concat(8 / speedMultiplier, \"s linear infinite\"),\n    };\n    var hour = {\n        position: \"absolute\",\n        backgroundColor: color,\n        width: \"\".concat(value / 2.4, \"px\"),\n        height: \"2px\",\n        top: \"\".concat(value / 2 - 1, \"px\"),\n        left: \"\".concat(value / 2 - 1, \"px\"),\n        transformOrigin: \"1px 1px\",\n        animation: \"\".concat(rotate, \" \").concat(2 / speedMultiplier, \"s linear infinite\"),\n    };\n    if (!loading) {\n        return null;\n    }\n    return (React.createElement(\"span\", __assign({ style: wrapper }, additionalprops),\n        React.createElement(\"span\", { style: hour }),\n        React.createElement(\"span\", { style: minute })));\n}\nexports.default = ClockLoader;\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    // Support deprecated exitBeforeEnter prop\n    if (exitBeforeEnter) {\n        mode = \"wait\";\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"Replace exitBeforeEnter with mode='wait'\");\n        }\n    }\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { sync } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    /**\n     * TODO: Remove this in 10.0\n     */\n    viewportFallback() {\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         */\n        requestAnimationFrame(() => {\n            this.hasEnteredView = true;\n            const { onViewportEnter } = this.node.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once, fallback = true, } = viewport;\n        if (typeof IntersectionObserver === \"undefined\") {\n            if (fallback)\n                this.viewportFallback();\n            return;\n        }\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.0.3\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                child.animationState &&\n                    child.animationState.setActive(type, isActive);\n            });\n        }\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(AnimationType.Exit, !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from 'hey-listen';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.0.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.0.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","exports","React","require","unitConverter_1","rotate","createAnimation","_a","_b","loading","_c","color","_d","speedMultiplier","_e","cssOverride","_f","size","additionalprops","_g","parseLengthAndUnit","unit","wrapper","display","position","width","concat","height","backgroundColor","boxShadow","borderRadius","minute","top","left","transformOrigin","animation","hour","createElement","style","useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","prevProps","element","props","childRef","isPresent","sizeRef","offsetHeight","offsetWidth","offsetTop","offsetLeft","children","PopChild","id","useId","ref","useInsertionEffect","dataset","motionPopId","document","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","values","register","delete","forEach","_","key","PresenceContext","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","useState","forcedRenderCount","setForcedRenderCount","forceRender","useCallback","sync","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","callback","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","add","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","createContext","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","cancel","index","process","createRenderStep","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","createVisualElement","parent","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","render","updateFeatures","HandoffAppearAnimations","animationState","animateChanges","isRefObject","isVariantLabel","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","isBrowser","initialLayoutGroupConfig","isStrict","Provider","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformKeys","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","AnimationType","addPointerEvent","addPointerInfo","combineFunctions","pipe","transformers","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","Hover","HoverGesture","FocusGesture","isFocusVisible","matches","Focus","onFocus","onBlur","isNodeOrChild","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","Tap","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","onViewportEnter","InView","viewport","rootMargin","amount","once","fallback","threshold","isIntersecting","onViewportLeave","viewportFallback","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","getSize","stop","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","passTimestamp","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","prevIsPresent","prevPresenceContext","exitAnimation","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","controls","dragControls","addListeners","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","usePresence","applyTo","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isTransformDirty","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","BoundingBoxDimension","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig","useLayoutEffect"],"sourceRoot":""}