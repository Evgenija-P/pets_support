{"version":3,"file":"static/js/79.a06d0751.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport { media, colors, fontWeights } from '../../styles/stylesLayout';\nimport { Form, Field } from 'formik';\nimport { Link } from 'react-router-dom';\nimport MaskedInput from 'react-text-mask';\nimport mobileBackground from '../../img/Auth/bg-auth-mobile.png';\nimport tabletBackground from '../../img/Auth/bg-auth-tablet.png';\nimport desktopBackground from '../../img/Auth/bg-auth-desctop.png';\n\nexport const FormContainer = styled.div`\n  width: 100%;\n  min-height: calc(100vh - 58px);\n  background-image: url(${mobileBackground});\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: contain;\n  ${media.tabletAndDesktop} {\n    background-image: url(${tabletBackground});\n    padding-top: 184px;\n    padding-bottom: 268px;\n    min-height: calc(100vh - 64px);\n  }\n  ${media.desktop} {\n    background-image: url(${desktopBackground});\n    padding-top: 50px;\n    padding-bottom: 147px;\n  }\n`;\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: ${fontWeights.bold};\n  margin-bottom: 40px;\n  margin-top: 0;\n  ${media.tabletAndDesktop} {\n    font-size: 36px;\n    font-weight: ${fontWeights.medium};\n  }\n`;\nexport const FormRegister = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 44px;\n  padding-bottom: 40px;\n  margin: 0 auto;\n  ${media.tabletAndDesktop} {\n    width: 608px;\n    margin: 0 auto;\n    padding: 60px 0 40px 0;\n    background-color: ${colors.white};\n    border-radius: 40px;\n    -webkit-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n    -moz-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n    box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n  }\n  ${media.desktop} {\n    width: 618px;\n    padding: 60px 0 60px 0;\n  }\n  > div {\n    position: relative;\n  }\n`;\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n\n  top: 50%;\n  transform: translateY(-80%);\n\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\nexport const Input = styled(Field)`\n  width: 280px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: ${colors.background};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    border-color: ${colors.hover};\n    outline: none;\n  }\n  ${media.tabletAndDesktop} {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  ${media.desktop} {\n    width: 458px;\n  }\n`;\nexport const PhoneInput = styled(MaskedInput)`\n  width: 280px;\n  padding: 11px 0 12px 14px;\n  background: ${colors.background};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    border-color: ${colors.hover};\n    outline: none;\n  }\n\n  ${media.tabletAndDesktop} {\n    width: 448px;\n    padding: 14px 0 13px 32px;\n    font-size: 18px;\n  }\n  ${media.desktop} {\n    width: 458px;\n  }\n`;\nexport const Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: ${colors.white};\n  background: ${colors.accent};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin: 24px 0 40px 0;\n  transform: scale(1);\n  transition: transform 0.5s;\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: ${colors.gradient};\n    transition: all 450ms;\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  :disabled:before {\n    transform: none;\n    transition: none;\n  }\n  ${media.tabletAndDesktop} {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\nexport const BackButton = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #000;\n  background: ${colors.white};\n  border: 1px solid ${colors.accent};\n  border-radius: 40px;\n  margin: -26px 0 40px 0;\n  cursor: pointer;\n  transform: scale(1);\n  transition: transform 0.5s;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: ${colors.gradient};\n    transition: all 450ms;\n  }\n  ${media.tabletAndDesktop} {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\nexport const ErrBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0px;\n  left: 15px;\n  color: #e53e3e;\n\n  font-family: 'Manrope';\n  font-size: 12px;\n  font-style: normal;\n  line-height: 1.4;\n  letter-spacing: 0.03em;\n\n  ${media.tabletAndDesktop} {\n    left: 32px;\n  }\n`;\nexport const StyledLink = styled(Link)`\n  color: ${colors.blue};\n  margin-left: 4px;\n  :hover,\n  :focus {\n    color: ${colors.accent};\n  }\n`;\nexport const BoxText = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  font-size: 12px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik, Formik /* getActiveElement */ } from 'formik';\nimport { object, string, ref } from 'yup';\nimport Spinner from '../Spinner';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\n\nimport { selectIsLoading } from '../../redux/auth/selectors';\nimport { register } from '../../redux/auth/operations';\n\nimport {\n  // emailRegex,\n  phoneRegexp,\n  cityRegexp,\n  userNameRegexp,\n  passwordRegexp,\n} from '../../helpers/regExpsHelpers';\nimport {\n  FormRegister,\n  FormContainer,\n  Input,\n  Button,\n  Title,\n  ErrBox,\n  BackButton,\n  PhoneInput,\n  ShowPassword,\n  StyledLink,\n  BoxText,\n} from './RegisterForm.styled';\n\nconst emailRegex = /^[^-][a-zA-Z0-9_.-]{1,64}@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n\nconst phoneNumberMask = [\n  '+',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n\n  /\\d/,\n  /\\d/,\n\n  /\\d/,\n  /\\d/,\n  /\\d/,\n\n  /\\d/,\n  /\\d/,\n\n  /\\d/,\n  /\\d/,\n];\n\nconst registerSchema = object().shape({\n  password: string()\n    .min(7, 'Password must be at least 7 characters')\n    .max(32, 'Password must be at most 32 characters')\n    .matches(passwordRegexp, 'Must not contain spaces')\n    .required('Password is required'),\n  confirmPassword: string()\n    .required('Please confirm your password')\n    .oneOf([ref('password')], 'Passwords does not match'),\n  email: string()\n    .email('Invalid email adress')\n    .matches(emailRegex, 'Invalid email adress')\n    .required('Email is required'),\n  name: string()\n    .min(2, 'Min 2 symbols')\n    .matches(userNameRegexp, 'Only letters')\n    .required('Name is required'),\n  phone: string()\n    .min(13, 'Too Short!')\n    .matches(phoneRegexp, 'Bad phone number')\n    .required('Phone is required'),\n  city: string()\n    .matches(cityRegexp, 'Error. Example: Brovary, Kyiv')\n    .required('City is required'),\n});\n\nconst RegisterForm = () => {\n  const [isShown, setIsShown] = useState(true);\n  const [showPass, setShowPass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const loading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const showForm = () => {\n    setIsShown(false);\n  };\n  const hideForm = () => {\n    setIsShown(true);\n  };\n\n  const onSubmit = values => {\n    const { name, email, password, phone, city } = values;\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n        phone,\n        city,\n      }),\n      hideForm()\n    );\n    console.log(values);\n  };\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      phone: '',\n      city: '',\n    },\n    validationSchema: registerSchema,\n    onSubmit,\n  });\n\n  const isValid =\n    (formik.errors.email && formik.touched.email) ||\n    (formik.errors.password && formik.touched.password) ||\n    (formik.errors.confirmPassword && formik.touched.confirmPassword) ||\n    formik.values.email === '' ||\n    formik.values.confirmPassword === ''\n      ? true\n      : false;\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n  const showConfirmPassword = () => {\n    setShowConfirmPass(!showConfirmPass);\n  };\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <FormContainer>\n          <Formik validationSchema={registerSchema}>\n            <FormRegister onSubmit={formik.handleSubmit} autoComplete=\"off\">\n              <Title>Register</Title>\n              {isShown && (\n                <>\n                  <div>\n                    <Input\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      validate={registerSchema.email}\n                      onChange={formik.handleChange}\n                      value={formik.values.email}\n                      onBlur={formik.handleBlur}\n                    />\n\n                    {formik.errors.email || formik.touched.email ? (\n                      <ErrBox>{formik.errors.email}</ErrBox>\n                    ) : null}\n                  </div>\n                </>\n              )}\n\n              {isShown && (\n                <>\n                  <div>\n                    <Input\n                      name=\"password\"\n                      type={showPass ? 'text' : 'password'}\n                      placeholder=\"Password\"\n                      onChange={formik.handleChange}\n                      value={formik.values.password}\n                      onBlur={formik.handleBlur}\n                    />\n\n                    <ShowPassword onClick={showPassword}>\n                      {!showPass ? <ImEyeBlocked /> : <ImEye />}\n                    </ShowPassword>\n                    {formik.errors.password && formik.touched.password ? (\n                      <ErrBox>{formik.errors.password}</ErrBox>\n                    ) : null}\n                  </div>\n                </>\n              )}\n              {isShown && (\n                <>\n                  <div>\n                    <Input\n                      name=\"confirmPassword\"\n                      type={showConfirmPass ? 'text' : 'password'}\n                      placeholder=\"Confirm Password\"\n                      onChange={formik.handleChange}\n                      value={formik.values.confirmPassword}\n                      onBlur={formik.handleBlur}\n                    />\n                    <ShowPassword onClick={showConfirmPassword}>\n                      {!showConfirmPass ? <ImEyeBlocked /> : <ImEye />}\n                    </ShowPassword>\n                    {formik.errors.confirmPassword &&\n                    formik.touched.confirmPassword ? (\n                      <ErrBox>{formik.errors.confirmPassword}</ErrBox>\n                    ) : null}\n                  </div>\n                </>\n              )}\n              {isShown && (\n                <Button type=\"button\" onClick={showForm} disabled={isValid}>\n                  Next\n                </Button>\n              )}\n              {!isShown && (\n                <>\n                  <div>\n                    <Input\n                      name=\"name\"\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      onChange={formik.handleChange}\n                      value={formik.values.name}\n                      onBlur={formik.handleBlur}\n                    />\n\n                    {formik.errors.name && formik.touched.name ? (\n                      <ErrBox>{formik.errors.name}</ErrBox>\n                    ) : null}\n                  </div>\n                </>\n              )}\n              {!isShown && (\n                <>\n                  <div>\n                    <Input\n                      name=\"city\"\n                      type=\"text\"\n                      placeholder=\"City, region\"\n                      onChange={formik.handleChange}\n                      value={formik.values.city}\n                      onBlur={formik.handleBlur}\n                    />\n\n                    {formik.errors.city && formik.touched.city ? (\n                      <ErrBox>{formik.errors.city}</ErrBox>\n                    ) : null}\n                  </div>\n                </>\n              )}\n              {!isShown && (\n                <>\n                  <div>\n                    <PhoneInput\n                      mask={phoneNumberMask}\n                      id=\"phone\"\n                      type=\"phone\"\n                      placeholder=\"Mobile phone\"\n                      onChange={formik.handleChange}\n                      value={formik.values.phone}\n                      onBlur={formik.handleBlur}\n                      name=\"phone\"\n                    />\n\n                    {formik.errors.phone && formik.touched.phone ? (\n                      <ErrBox>{formik.errors.phone}</ErrBox>\n                    ) : null}\n                  </div>\n                </>\n              )}\n              {!isShown && <Button type=\"submit\">Register</Button>}\n              {!isShown && (\n                <BackButton type=\"button\" onClick={hideForm}>\n                  Back\n                </BackButton>\n              )}\n              <BoxText>\n                <span>Already have an account?</span>{' '}\n                <StyledLink to=\"/login\">Login</StyledLink>\n              </BoxText>\n            </FormRegister>\n          </Formik>\n        </FormContainer>\n      )}\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from '../components/RegisterForm';\n\nexport default function Register() {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["FormContainer","styled","mobileBackground","media","tabletBackground","desktopBackground","Title","fontWeights","FormRegister","Form","colors","ShowPassword","Input","Field","PhoneInput","MaskedInput","Button","BackButton","ErrBox","StyledLink","Link","BoxText","phoneNumberMask","registerSchema","object","shape","password","string","min","max","matches","passwordRegexp","required","confirmPassword","oneOf","ref","email","name","userNameRegexp","phone","phoneRegexp","city","cityRegexp","useState","isShown","setIsShown","showPass","setShowPass","showConfirmPass","setShowConfirmPass","loading","useSelector","selectIsLoading","dispatch","useDispatch","hideForm","formik","useFormik","initialValues","validationSchema","onSubmit","values","register","console","log","isValid","errors","touched","Spinner","handleSubmit","autoComplete","type","placeholder","validate","onChange","handleChange","value","onBlur","handleBlur","onClick","disabled","mask","id","to","Register"],"sourceRoot":""}