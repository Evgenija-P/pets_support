{"version":3,"file":"static/js/403.508089a4.chunk.js","mappings":"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","sources":["components/Friends/FriendsWorkDays/FriendsWorkDays.styled.js","components/Friends/FriendsWorkDays/FriendsWorkDays.jsx","components/Friends/FriendsAbout/FriendsAbout.styled.js","components/Friends/FriendsAbout/FriendsAbout.jsx","components/Friends/FriendsList/FriendsList.jsx","pages/OurFriendsPage.js","servises/api.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { colors, fontWeights } from '../../../styles/stylesLayout';\n\nexport const WorkDaysList = styled.ul`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 120px;\n  height: 160px;\n  padding: 12px;\n  border: 1px solid ${colors.accent};\n  background: ${colors.white};\n  box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.25);\n  border-radius: 8px;\n`;\n\nexport const WorkDaysItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n\n  font-weight: ${fontWeights.medium};\n`;\n\nexport const Worky = styled.p``;\n","import { nanoid } from 'nanoid';\nimport { WorkDaysList, WorkDaysItem, Worky } from './FriendsWorkDays.styled';\n\nconst FriendsWorkDays = ({ workDays }) => {\n  const days = ['MN', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'];\n  if (!Array.isArray(workDays)) {\n    return;\n  }\n\n  const newWeek =\n    workDays &&\n    workDays.map((day, index) => {\n      return { day: days[index], ...day };\n    });\n\n  return (\n    <WorkDaysList>\n      {newWeek.map(item => (\n        <WorkDaysItem key={nanoid()}>\n          {item.isOpen ? (\n            <>\n              <Worky>{item.day}</Worky>\n              <Worky>\n                {item.from}-{item.to}\n              </Worky>\n            </>\n          ) : (\n            <>\n              <Worky>{item.day} </Worky>\n              <Worky>Closed </Worky>\n            </>\n          )}\n        </WorkDaysItem>\n      ))}\n    </WorkDaysList>\n  );\n};\n\nexport default FriendsWorkDays;\n","import styled from '@emotion/styled';\nimport { colors, fontWeights, media } from '../../../styles/stylesLayout';\n\nexport const FriendsWrapperAbout = styled.div`\n  display: flex;\n  width: 170px;\n  height: 160px;\n\n  line-height: 1.33;\n  font-weight: ${fontWeights.medium};\n`;\n\nexport const AboutItem = styled.li`\n  margin-bottom: 4px;\n\n  ${media.tablet} {\n    margin-bottom: 8px;\n  }\n\n  ${media.desktop} {\n    margin-bottom: 12px;\n  }\n`;\n\nexport const Active = styled.span`\n  :hover,\n  :focus {\n    cursor: pointer;\n    color: ${colors.accent};\n  }\n`;\n","import { useState } from 'react';\nimport FriendsWorkDays from '../FriendsWorkDays/FriendsWorkDays';\nimport { FriendsWrapperAbout, Active, AboutItem } from './FriendsAbout.styled';\n\nconst FriendsAbout = ({ item }) => {\n  const { phone, email, workDays, address, addressUrl } = item;\n  const [onOpen, setOnOpen] = useState(false);\n  const telNumber = 'tel:' + phone;\n  const emailAdres = `mailto:` + email;\n\n  return (\n    <FriendsWrapperAbout>\n      <ul>\n        <AboutItem\n          onClick={() => {\n            setOnOpen(true);\n          }}\n          onMouseLeave={() => {\n            setOnOpen(false);\n          }}\n        >\n          {workDays === undefined || workDays === null ? (\n            <>\n              <p>Time: </p>\n              <p>------------</p>\n            </>\n          ) : (\n            <Active>\n              {workDays[0] && workDays[0].isOpen ? (\n                <>\n                  <p>Time:</p>\n                  <p>\n                    {workDays[0].from}-{workDays[0].to}\n                  </p>\n                </>\n              ) : (\n                <>\n                  <p>Time:</p>\n                  <p>Closed</p>\n                </>\n              )}\n              {!onOpen || <FriendsWorkDays workDays={workDays} />}\n            </Active>\n          )}\n        </AboutItem>\n        <AboutItem>\n          {address === undefined || address === null ? (\n            <>\n              <p>Addres: </p>\n              <p>------------</p>\n            </>\n          ) : (\n            <Active>\n              <p>Addres: </p>\n              <a href={addressUrl} target=\"_blank\" rel=\"noreferrer\">\n                {address}\n              </a>\n            </Active>\n          )}\n        </AboutItem>\n        <AboutItem>\n          {email === undefined || email === null ? (\n            <>\n              <p>Email: </p>\n              <p>------------</p>\n            </>\n          ) : (\n            <Active>\n              <p>Email: </p>\n              <a href={emailAdres}>{email}</a>\n            </Active>\n          )}\n        </AboutItem>\n        <AboutItem>\n          {phone === undefined || phone === null ? (\n            <>\n              <p>Phone: </p>\n              <p>------------</p>\n            </>\n          ) : (\n            <Active>\n              <p>Phone: </p>\n              <a href={telNumber}>{phone}</a>\n            </Active>\n          )}\n        </AboutItem>\n      </ul>\n    </FriendsWrapperAbout>\n  );\n};\n\nexport default FriendsAbout;\n","import React, { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport { optionsToast } from '../../../styles/stylesLayout';\n\nimport BASE_URL from '../../../servises/api';\nimport FriendsAbout from '../FriendsAbout/FriendsAbout';\nimport defaultImage from '../../../img/default.jpg';\nimport Spinner from '../../Spinner/Spinner';\nimport {\n  FriendsContainer,\n  FriendsTitle,\n  FriendsError,\n  FriendsItem,\n  FriendsData,\n  FriendsImg,\n  FriendsItemTitle,\n} from './FriendsList.styles';\n\nconst FriendsList = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [friendsItems, setFriendsItems] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchFriends();\n  }, []);\n\n  const fetchFriends = async () => {\n    try {\n      const res = await fetch(`${BASE_URL}/sponsors`);\n      const result = await res.json();\n      if (result.data.sponsors) {\n        setIsLoading(false);\n        setFriendsItems(result.data.sponsors);\n      }\n      return result;\n    } catch (e) {\n      setError('Oh! Something wrong! Please try again in a few minutes');\n      toast.error('Oh! Something wrong!', optionsToast);\n      console.log(e.message);\n    }\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <>\n          <FriendsTitle>Our friends</FriendsTitle>\n          <FriendsContainer>\n            {friendsItems.map(item => (\n              <FriendsItem key={nanoid()}>\n                <FriendsItemTitle href={`${item.url}`} target=\"_blank\">\n                  {item.title}\n                </FriendsItemTitle>\n                <FriendsData>\n                  <FriendsImg\n                    src={item.imageUrl ? `${item.imageUrl}` : defaultImage}\n                    alt={item.title}\n                  />\n                  <FriendsAbout item={item} />\n                </FriendsData>\n              </FriendsItem>\n            ))}\n          </FriendsContainer>\n        </>\n      )}\n      {error && <FriendsError>{error}</FriendsError>}\n    </>\n  );\n};\n\nexport default FriendsList;\n","import { Helmet } from 'react-helmet';\nimport React from 'react';\n\nimport FriendsList from '../components/Friends/FriendsList/FriendsList';\n\nconst OurFriendsPage = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>OurFriendsPage</title>\n      </Helmet>\n\n      <FriendsList />\n    </div>\n  );\n};\nexport default OurFriendsPage;\n","const BASE_URL = 'https://petly-brs3.onrender.com/api';\n// const BASE_URL = 'http://localhost:3001/api';\nexport default BASE_URL;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["WorkDaysList","styled","colors","WorkDaysItem","fontWeights","Worky","workDays","days","Array","isArray","newWeek","map","day","index","item","isOpen","from","to","nanoid","FriendsWrapperAbout","AboutItem","media","Active","phone","email","address","addressUrl","useState","onOpen","setOnOpen","telNumber","emailAdres","onClick","onMouseLeave","undefined","href","target","rel","isLoading","setIsLoading","friendsItems","setFriendsItems","error","setError","useEffect","fetchFriends","fetch","BASE_URL","res","json","result","data","sponsors","toast","optionsToast","console","log","message","Spinner","url","title","src","imageUrl","defaultImage","alt","Helmet","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase"],"sourceRoot":""}