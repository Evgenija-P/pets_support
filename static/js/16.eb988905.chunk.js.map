{"version":3,"file":"static/js/16.eb988905.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { media, colors, fontWeights } from '../../styles/stylesLayout';\nimport { Form, Field } from 'formik';\n\nimport mobileBackground from '../../img/Auth/bg-auth-mobile.png';\nimport tabletBackground from '../../img/Auth/bg-auth-tablet.png';\nimport desktopBackground from '../../img/Auth/bg-auth-desctop.png';\n\nexport const Container = styled.div`\n  padding-top: 42px;\n\n  ${media.tablet} {\n    padding-top: 204px;\n  }\n\n  ${media.desktop} {\n    padding-top: 80px;\n  }\n`;\n\nexport const FormLogin = styled(Form)`\n  width: 280px;\n\n  padding-inline: 0px;\n  padding-bottom: 0px;\n\n  background-color: transparent;\n  margin-inline: auto;\n  box-sizing: border-box;\n\n  ${media.tablet} {\n    width: 608px;\n\n    padding: 60px 80px 40px 80px;\n\n    background-color: ${colors.white};\n    border-radius: 40px;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  }\n\n  ${media.desktop} {\n    width: 618px;\n\n    padding: 60px 80px;\n\n    background-color: ${colors.white};\n    border-radius: 40px;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 40px;\n\n  font-family: 'Manrope';\n  font-weight: ${fontWeights.bold};\n  font-size: 24px;\n  line-height: 1.4;\n  letter-spacing: 0.04em;\n\n  align-items: center;\n  text-align: center;\n\n  color: ${colors.black};\n\n  ${media.tablet} {\n    font-weight: ${fontWeights.medium};\n    font-size: 36px;\n  }\n`;\n\nexport const FieldLogin = styled.div`\n  margin-bottom: 16px;\n  position: relative;\n`;\nexport const FieldPass = styled.div`\n  margin-bottom: 40px;\n  position: relative;\n`;\n\nexport const FieldWrap = styled.div`\n  position: relative;\n`;\n\nexport const Input = styled(Field)`\n  box-sizing: border-box;\n\n  width: 100%;\n\n  height: 40px;\n  padding: 11px 14px;\n\n  font-family: 'Manrope';\n  font-weight: ${fontWeights.regular};\n  font-size: 14px;\n  line-height: 1.4;\n  align-items: center;\n  letter-spacing: 0.04em;\n\n  color: ${colors.black};\n\n  background: ${colors.background};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n\n  border-radius: 40px;\n\n  &::placeholder {\n    font-style: normal;\n    font-weight: ${fontWeights.regular};\n    font-size: 14px;\n    line-height: 1.36;\n    letter-spacing: 0.04em;\n    color: ${colors.gray};\n  }\n\n  :hover,\n  :focus {\n    border-color: ${colors.hover};\n    outline: 0;\n  }\n\n  ${media.tabletAndDesktop} {\n    height: 52px;\n    padding: 14px 32px;\n\n    font-size: 18px;\n    line-height: 1.38;\n\n    background: ${colors.background};\n\n    &::placeholder {\n      font-style: normal;\n      font-weight: ${fontWeights.regular};\n      font-size: 18px;\n      line-height: 1.38;\n      letter-spacing: 0.04em;\n      color: ${colors.gray};\n    }\n  }\n`;\n\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 16px;\n  height: 16px;\n  right: 14px;\n\n  top: 50%;\n  transform: translateY(-50%);\n\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n\n  ${media.tabletAndDesktop} {\n    width: 22px;\n    height: 22px;\n    right: 32px;\n  }\n`;\n\nexport const Button = styled.button`\n  box-sizing: border-box;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  width: 280px;\n  height: 44px;\n\n  padding: 10px 28px;\n  margin-bottom: 40px;\n\n  border: none;\n  border-radius: 40px;\n\n  color: ${colors.white};\n  background-color: ${colors.accent};\n\n  cursor: pointer;\n\n  font-family: 'Manrope';\n  font-weight: ${fontWeights.medium};\n  font-size: 20px;\n  line-height: 1.35px;\n  align-items: center;\n  text-align: center;\n  letter-spacing: 0.04em;\n\n  transform: scale(1);\n  transition: transform 0.5s;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: ${colors.gradient};\n    transition: all 450ms;\n  }\n\n  ${media.tabletAndDesktop} {\n    width: 458px;\n  }\n\n  ${media.desktop} {\n    height: 48px;\n  }\n`;\n\nexport const Text = styled.p`\n  box-sizing: border-box;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: ${fontWeights.regular};\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n\n  color: ${colors.gray};\n`;\n\nexport const Link = styled(NavLink)`\n  display: inline-block;\n  color: ${colors.blue};\n  text-decoration: none;\n`;\n\nexport const ErrorText = styled.div`\n  position: absolute;\n\n  font-family: 'Manrope';\n  font-size: 12px;\n  font-style: normal;\n\n  line-height: 1.4;\n  letter-spacing: 0.03em;\n\n  color: #e53e3e;\n\n  white-space: nowrap;\n  bottom: -16px;\n  left: 12px;\n\n  ${media.tabletAndDesktop} {\n    left: 32px;\n  }\n`;\n\nexport const Background = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: -100;\n\n  background-image: url(${mobileBackground});\n  background-position: center bottom;\n  background-size: contain;\n  background-repeat: no-repeat;\n  height: 100vh;\n\n  ${media.tablet} {\n    background-image: url(${tabletBackground});\n  }\n\n  ${media.desktop} {\n    background-image: url(${desktopBackground});\n  }\n`;\nexport const SpinerWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { selectIsLoading } from '../../redux/auth/selectors';\n\nimport { logIn } from '../../redux/auth/operations';\n\nimport {\n  // emailRegex,\n  passwordRegexp,\n} from '../../helpers/regExpsHelpers';\n\nimport Spinner from '../Spinner';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\nimport {\n  Container,\n  FormLogin,\n  FieldLogin,\n  FieldPass,\n  Title,\n  FieldWrap,\n  Input,\n  ShowPassword,\n  Button,\n  Text,\n  Link,\n  ErrorText,\n  Background,\n  SpinerWrapper,\n} from './LoginForm.styled';\n\nconst emailRegex = /^[^-][a-zA-Z0-9_.-]{1,64}@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n\nconst loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Invalid email address')\n    .matches(emailRegex, 'Invalid email address')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .min(7, 'Password must be at least 7 characters')\n    .max(32, 'Password must be at most 32 characters')\n    .matches(passwordRegexp, 'Must not contain spaces')\n    .required('Password is required'),\n});\n\nconst LoginForm = () => {\n  const [showPass, setShowPass] = useState(false);\n\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const onSubmit = async (values, actions) => {\n    const { resetForm } = actions;\n    const form = { email: values.email, password: values.password };\n    const { error } = await dispatch(logIn(form));\n\n    if (!error) {\n      resetForm();\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: { email: '', password: '' },\n    validationSchema: loginSchema,\n    onSubmit,\n  });\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <SpinerWrapper>\n          <Spinner />\n        </SpinerWrapper>\n      ) : (\n        <Container>\n          <Formik\n            initialValues={formik.initialValues}\n            validationSchema={loginSchema}\n          >\n            <FormLogin onSubmit={formik.handleSubmit} autoComplete=\"off\">\n              <Title>Login</Title>\n\n              <FieldLogin>\n                <label htmlFor=\"email\">\n                  <Input\n                    id=\"loginEmail\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    onChange={formik.handleChange}\n                    value={formik.values.email}\n                    onBlur={formik.handleBlur}\n                  />\n                  {formik.errors.email || formik.touched.email ? (\n                    <ErrorText>{formik.errors.email}</ErrorText>\n                  ) : null}\n                </label>\n              </FieldLogin>\n\n              <FieldPass>\n                <label htmlFor=\"password\">\n                  <FieldWrap>\n                    <Input\n                      id=\"password\"\n                      type={showPass ? 'text' : 'password'}\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      onChange={formik.handleChange}\n                      value={formik.values.password}\n                      onBlur={formik.handleBlur}\n                    />\n\n                    <ShowPassword onClick={showPassword}>\n                      {!showPass ? <ImEyeBlocked /> : <ImEye />}\n                    </ShowPassword>\n                  </FieldWrap>\n\n                  {formik.errors.password && formik.touched.password ? (\n                    <ErrorText>{formik.errors.password}</ErrorText>\n                  ) : null}\n                </label>\n              </FieldPass>\n\n              <Button type=\"submit\">Login</Button>\n\n              <Text>\n                <span>\n                  Don't have an account? <Link to=\"/register\">Register</Link>\n                </span>\n              </Text>\n            </FormLogin>\n          </Formik>\n          <Background></Background>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default LoginForm;\n","import { Helmet } from 'react-helmet';\nimport LoginForm from '../components/LoginForm';\n\nconst Login = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </>\n  );\n};\nexport default Login;\n"],"names":["Container","styled","media","FormLogin","Form","colors","Title","fontWeights","FieldLogin","FieldPass","FieldWrap","Input","Field","ShowPassword","Button","Text","Link","NavLink","ErrorText","Background","mobileBackground","tabletBackground","desktopBackground","SpinerWrapper","loginSchema","yup","shape","email","matches","required","password","min","max","passwordRegexp","useState","showPass","setShowPass","isLoading","useSelector","selectIsLoading","dispatch","useDispatch","onSubmit","values","actions","resetForm","form","logIn","error","formik","useFormik","initialValues","validationSchema","Spinner","handleSubmit","autoComplete","htmlFor","id","type","name","placeholder","onChange","handleChange","value","onBlur","handleBlur","errors","touched","onClick","to","Helmet"],"sourceRoot":""}