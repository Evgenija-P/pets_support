{"version":3,"file":"static/js/291.d1aba468.chunk.js","mappings":"0SAKaA,EAAYC,EAAAA,EAAAA,IAAH,qjBAMAC,EAAAA,GAAAA,WAIlBC,EAAAA,GAAAA,OAKoBD,EAAAA,GAAAA,MAKpBC,EAAAA,GAAAA,QAKoBD,EAAAA,GAAAA,OAMXE,EAAQH,EAAAA,EAAAA,GAAH,oSAIDI,EAAAA,GAAAA,KAQNH,EAAAA,GAAAA,MAEPC,EAAAA,GAAAA,OACeE,EAAAA,GAAAA,QAKNC,EAAaL,EAAAA,EAAAA,IAAH,gDAGVM,EAAYN,EAAAA,EAAAA,IAAH,gDAITO,GAAQP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAH,2tCASDI,EAAAA,GAAAA,QAMNH,EAAAA,GAAAA,MASQG,EAAAA,GAAAA,QAINH,EAAAA,GAAAA,KAKWA,EAAAA,GAAAA,OAIpBC,EAAAA,GAAAA,OAOcD,EAAAA,GAAAA,WAIGG,EAAAA,GAAAA,QAINH,EAAAA,GAAAA,KAIXC,EAAAA,GAAAA,QAOcD,EAAAA,GAAAA,WAIGG,EAAAA,GAAAA,QAINH,EAAAA,GAAAA,MAKFQ,EAAST,EAAAA,EAAAA,OAAH,ysBAkBRC,EAAAA,GAAAA,MACWA,EAAAA,GAAAA,OAKLG,EAAAA,GAAAA,OASJH,EAAAA,GAAAA,MACWA,EAAAA,GAAAA,OACAA,EAAAA,GAAAA,MAGpBC,EAAAA,GAAAA,OAIAA,EAAAA,GAAAA,SAMSQ,EAAOV,EAAAA,EAAAA,IAAH,yRASAI,EAAAA,GAAAA,QAKNH,EAAAA,GAAAA,MAGEU,GAAOX,EAAAA,EAAAA,GAAOY,EAAAA,GAAPZ,CAAH,gEACNC,EAAAA,GAAAA,MAIEY,EAAYb,EAAAA,EAAAA,IAAH,8M,SCzLhBc,EAAcC,EAAAA,KAAaC,MAAM,CACnCC,MAAMF,EAAAA,KAAaE,MAAM,wBAAwBC,SAAS,YAC3DC,SAAUJ,EAAAA,KAAaK,IAAI,EAAE,0CAA0CC,IAAI,GAAG,0CAA0CC,QAJrG,QAI4H,2BAA2BJ,SAAS,cAGhLK,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB,OACI,SAAC,KAAD,CACIA,KAAMA,EACNC,OAAQ,SAAAC,GAAO,OAAI,SAACb,EAAD,UAAYa,GAAhB,GAG1B,EAiED,EA9DkB,WAEd,IAAMC,GAAWC,EAAAA,EAAAA,MAOXC,EAAY,mCAAG,WAAOC,EAAQC,GAAf,kFACTC,EAAcD,EAAdC,UACFC,EAAQ,CAAE,MAASH,EAAOb,MAAO,SAAYa,EAAOX,UAFzC,SAGOQ,GAASO,EAAAA,EAAAA,IAAMD,IAHtB,kBAGTE,OAGRH,IAGAI,QAAQC,IAAIP,GATK,2CAAH,wDAalB,OACI,UAAC/B,EAAD,YACI,SAACI,EAAD,qBACA,SAAC,KAAD,CACImC,cAtBU,CAClBrB,MAAM,GACNE,SAAS,IAqBDoB,SAAUV,EACVW,iBAAkB1B,EAHtB,UAMI,UAAC,KAAD,CAAM2B,aAAa,KAAnB,WACI,SAACpC,EAAD,WACI,mBAAOqC,QAAQ,QAAf,WACI,SAACnC,EAAD,CAAOoC,GAAG,aAAaC,KAAK,QAAQpB,KAAK,QAAQqB,YAAY,WAC7D,SAACtB,EAAD,CAAWC,KAAK,gBAKxB,SAAClB,EAAD,WACI,mBAAOoC,QAAQ,WAAf,WACI,SAACnC,EAAD,CAAOoC,GAAG,WAAWC,KAAK,WAAWpB,KAAK,WAAWqB,YAAY,cACjE,SAACtB,EAAD,CAAWC,KAAK,mBAIxB,SAACf,EAAD,CAAQmC,KAAK,SAAb,oBACA,SAAClC,EAAD,WACI,oDACI,2BACI,SAACC,EAAD,CAAMmC,GAAG,YAAT,oCAQ9B,ECrFF,EAVc,WACZ,OACE,iCACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAAC,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { media, colors, fontWeights } from '../../styles/stylesLayout';\nimport { Field } from 'formik';\n\nexport const Container = styled.div`\n  width: 280px;\n  padding-inline: 0px;\n  padding-top: 42px;\n  padding-bottom: 0px;\n  /* border-radius: 40px; */\n  background-color: ${colors.background};\n  margin-inline: auto;\n  box-sizing: border-box;\n\n  ${media.tablet} {\n    width: 608px;\n\n    padding: 60px 80px 40px 80px;\n\n    background-color: ${colors.white};\n    border-radius: 40px;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  }\n\n  ${media.desktop} {\n    width: 618px;\n\n    padding: 60px 80px;\n\n    background-color: ${colors.white};\n    border-radius: 40px;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 40px;\n\n  font-family: 'Manrope';\n  font-weight: ${fontWeights.bold};\n  font-size: 24px;\n  line-height: 1.4;\n  letter-spacing: 0.04em;\n\n  align-items: center;\n  text-align: center;\n\n  color: ${colors.black};\n\n  ${media.tablet} {\n    font-weight: ${fontWeights.medium};\n    font-size: 36px;\n  }\n`;\n\nexport const FieldLogin = styled.div`\n  margin-bottom: 16px;\n`;\nexport const FieldPass = styled.div`\n  margin-bottom: 40px;\n`;\n\nexport const Input = styled(Field)`\n  box-sizing: border-box;\n\n  width: 100%;\n\n  height: 40px;\n  padding-left: 14px;\n\n  font-family: 'Manrope';\n  font-weight: ${fontWeights.regular};\n  font-size: 14px;\n  line-height: 1.4;\n  align-items: center;\n  letter-spacing: 0.04em;\n\n  color: ${colors.black};\n\n  background: transparent;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n\n  border-radius: 40px;\n\n  &::placeholder {\n    font-style: normal;\n    font-weight: ${fontWeights.regular};\n    font-size: 14px;\n    line-height: 1.36;\n    letter-spacing: 0.04em;\n    color: ${colors.gray};\n  }\n\n  :hover,\n  :focus {\n    border: 2px solid ${colors.accent};\n    outline: 0;\n  }\n\n  ${media.tablet} {\n    height: 52px;\n    padding-left: 32px;\n\n    font-size: 18px;\n    line-height: 1.38;\n\n    background: ${colors.background};\n\n    &::placeholder {\n      font-style: normal;\n      font-weight: ${fontWeights.regular};\n      font-size: 18px;\n      line-height: 1.38;\n      letter-spacing: 0.04em;\n      color: ${colors.gray};\n    }\n  }\n\n  ${media.desktop} {\n    height: 52px;\n    padding-left: 32px;\n\n    font-size: 18px;\n    line-height: 1.38;\n\n    background: ${colors.background};\n\n    &::placeholder {\n      font-style: normal;\n      font-weight: ${fontWeights.regular};\n      font-size: 18px;\n      line-height: 1.38;\n      letter-spacing: 0.04em;\n      color: ${colors.gray};\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  box-sizing: border-box;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  width: 280px;\n  height: 44px;\n\n  padding: 10px 28px;\n  margin-bottom: 40px;\n\n  border: none;\n  border-radius: 40px;\n\n  color: ${colors.white};\n  background-color: ${colors.accent};\n\n  cursor: pointer;\n\n  font-family: 'Manrope';\n  font-weight: ${fontWeights.medium};\n  font-size: 20px;\n  line-height: 1.35px;\n  align-items: center;\n  text-align: center;\n  letter-spacing: 0.04em;\n\n  :hover,\n  :focus {\n    color: ${colors.black};\n    border: 2px solid ${colors.accent};\n    background-color: ${colors.white};\n  }\n\n  ${media.tablet} {\n    width: 458px;\n  }\n\n  ${media.desktop} {\n    width: 458px;\n    height: 48px;\n  }\n`;\n\nexport const Text = styled.div`\n  box-sizing: border-box;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: ${fontWeights.regular};\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n\n  color: ${colors.gray};\n`;\n\nexport const Link = styled(NavLink)`\n  color: ${colors.blue};\n  text-decoration: none;\n`;\n\nexport const ErrorText = styled.div`\n  display: flex;\n  align-items: center;\n\n  margin-top: 8px;\n\n  font-family: 'Manrope';\n  font-size: 12px;\n  line-height: 1.4;\n  letter-spacing: 0.03em;\n\n  color: #e53e3e;\n`;\n","import { Formik, Form, ErrorMessage } from \"formik\"\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\n\nimport {logIn}  from \"../../redux/auth/operations\";\n\nimport {\n    Container,\n    FieldLogin,\n    FieldPass,\n    Title,\n    Input,\n    Button,\n    Text,\n    Link,\n    ErrorText\n    \n} from \"./LoginForm.styled\";\n\n\n\n\nconst regexPassword = /^\\S*$/\n\nconst loginSchema = yup.object().shape({\n    email:yup.string().email(\"Invalid email adress\").required(\"Required\"),\n   password: yup.string().min(7,\"Password must be at least 7 characters\").max(32,\"Password must be at most 32 characters\").matches(regexPassword, \"Must not contain spaces\").required(\"Required\"),\n})\n\nconst FormError = ({ name }) => {\n    return (\n        <ErrorMessage\n            name={name}            \n            render={message => <ErrorText>{message}</ErrorText>}\n        />\n    )\n}\n\n\nconst LoginForm = () => {\n\n    const dispatch = useDispatch();\n\n    const initialValues = {\n        email:\"\",\n        password:\"\"\n    }\n    \n    const handleSubmit = async (values, actions) => {\n        const { resetForm } = actions; \n        const form = ({ 'email': values.email, 'password': values.password }); \n        const { error } = await dispatch(logIn(form));\n\n        if (!error) {\n        resetForm() \n        }\n                               \n        console.log(values)\n        //  console.log(actions)\n     }\n        \n    return (\n        <Container>\n            <Title>Login</Title>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={handleSubmit}\n                validationSchema={loginSchema}\n            >\n                \n                <Form autoComplete=\"on\">\n                    <FieldLogin>\n                        <label htmlFor=\"email\">  \n                            <Input id=\"loginEmail\" type=\"email\" name=\"email\" placeholder=\"Email\" />\n                            <FormError name=\"email\" />\n                        </label>\n                        \n                    </FieldLogin>\n\n                    <FieldPass>\n                        <label htmlFor=\"password\">\n                            <Input id=\"password\" type=\"password\" name=\"password\" placeholder=\"Password\" />\n                            <FormError name=\"password\" />\n                        </label>\n                    </FieldPass>\n                                  \n                    <Button type=\"submit\">Login</Button>\n                    <Text>\n                        <p> Don't have an account?\n                            <span >\n                                <Link to='/register'>Register</Link>\n                            </span>\n                        </p>                         \n                    </Text>\n                </Form>\n            </Formik>\n        </Container>\n    )\n }\n\n\nexport default LoginForm \n","import { Helmet } from 'react-helmet';\nimport LoginForm from '../components/LoginForm';\n\nconst Login = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </>\n  );\n};\nexport default Login;\n"],"names":["Container","styled","colors","media","Title","fontWeights","FieldLogin","FieldPass","Input","Field","Button","Text","Link","NavLink","ErrorText","loginSchema","yup","shape","email","required","password","min","max","matches","FormError","name","render","message","dispatch","useDispatch","handleSubmit","values","actions","resetForm","form","logIn","error","console","log","initialValues","onSubmit","validationSchema","autoComplete","htmlFor","id","type","placeholder","to","Helmet"],"sourceRoot":""}